import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { Box, Button, TextField, Typography } from "@mui/material";
import { Card, CardContent } from "@mui/material";

type FormData = {
  // 1. Identifica√ß√£o Completa - Recorrente
  nomeRazaoSocial: string;
  cnpj: string;
  endereco: string;

  // 1. Identifica√ß√£o Completa - √ìrg√£o/Entidade
  nomeOrgao: string;

  // 2. Informa√ß√µes da Licita√ß√£o
  numeroLicitacao: string;
  objetoLicitacao: string;
  dataSessaoPublica: string;
  linkEdital: string;

  // 3. Ato Recorrido
  nomeDaEmpresaRecorrente: string;
  resumoDaTeseDoRecurso: string;

  //4. Fundamenta√ß√£o da Contrarraz√£o
  argumentoDeDefesa: string;

  // 5. Informa√ß√µes Adicionais
  informacoesAdicionais: string;
};

function formatFormDataToString(data: FormData): string {
  return `

Voc√™ √© um assistente especialista na *elabora√ß√£o de Contrarraz√µes Administrativas em processos licitat√≥rios, com profundo conhecimento da **Lei n¬∫ 14.133/2021 (Nova Lei de Licita√ß√µes), da jurisprud√™ncia do **Tribunal de Contas da Uni√£o (TCU)* e dos princ√≠pios constitucionais e administrativos aplic√°veis.

Sua tarefa √© redigir uma *Contrarraz√£o Administrativa COMPLETA, estruturada como pe√ßa jur√≠dica*, com as seguintes diretrizes obrigat√≥rias:

---

## üìå *ESTRUTURA OBRIGAT√ìRIA DA PE√áA*

A resposta deve conter, na ordem, os seguintes *cap√≠tulos numerados*:

1. *T√çTULO:* Use ## ‚Äî Exemplo: ‚ÄúCONTRARRAZ√ïES AO RECURSO ADMINISTRATIVO‚Äù  
2. *1. DOS FATOS:* Apresente de forma objetiva o contexto da licita√ß√£o, da empresa manifestante, e o que o recurso questiona.
3. *2. DA S√çNTESE DAS ALEGA√á√ïES DO RECORRENTE:* Explique de forma resumida o teor do recurso, mantendo imparcialidade.
4. *3. DA FUNDAMENTA√á√ÉO JUR√çDICA:* Desenvolva os argumentos de defesa com base:
   - Nos *artigos espec√≠ficos da Lei n¬∫ 14.133/2021*
   - Nos *princ√≠pios constitucionais* (isonomia, contradit√≥rio, ampla defesa, interesse p√∫blico, efici√™ncia)
   - Em *cita√ß√µes diretas de dispositivos legais*
   - Inclua *jurisprud√™ncia real ou modelo realista do TCU* como refor√ßo.
   - Organize em par√°grafos robustos, com cita√ß√µes em *blockquote* ou Markdown.

5. *4. DA IMPROCED√äNCIA DO RECURSO:* Argumente de forma clara e firme por que o recurso deve ser rejeitado, listando ponto a ponto as falhas do recorrente, se houver.
6. *5. DO PEDIDO:* Solicite explicitamente o conhecimento e o IMPROVIMENTO do recurso, mantendo-se a decis√£o que favorece a empresa manifestante.
7. *6. LOCAL, DATA E ASSINATURA:* Finalize com localidade gen√©rica, data e men√ß√£o de assinatura.

---

## üìå *FORMATA√á√ÉO*

- Escreva em *portugu√™s do Brasil, linguagem **jur√≠dica t√©cnica*, mas clara e sem excesso de rebuscamento.
- Use *Markdown*:  
  - T√≠tulos de cap√≠tulos como ## e ###
  - *Negrito* para artigos de lei e princ√≠pios
  - Listas - quando listar argumentos
  - Cita√ß√µes literais em > blockquote
- O texto final deve parecer *uma pe√ßa jur√≠dica formal, **n√£o um resumo*.
- M√°ximo de *1000 palavras*.

---

## üìå *INFORMA√á√ïES DO FORMUL√ÅRIO (preencher):*

1Ô∏è‚É£ *Identifica√ß√£o do Manifestante*
- Nome/Raz√£o Social: [NOME]
- CNPJ: [CNPJ]
- Endere√ßo: [ENDERE√áO]

2Ô∏è‚É£ *Informa√ß√µes da Licita√ß√£o*
- N√∫mero da Licita√ß√£o: [N√öMERO]
- Objeto da Licita√ß√£o: [OBJETO]
- Data da Sess√£o P√∫blica: [DATA]
- Link do Edital: [LINK]
- Nome do √ìrg√£o/Entidade: [√ìRG√ÉO]

3Ô∏è‚É£ *Identifica√ß√£o do Recurso Contest√°vel*
- Nome da Empresa Recorrente: [EMPRESA_RECORRENTE]
- N√∫mero do Recurso: [NUMERO_RECURSO]
- Resumo da Tese do Recurso: [TESE_RECURSO]

4Ô∏è‚É£ *Fundamenta√ß√£o da Contrarraz√£o*
- Argumentos de Defesa: [ARGUMENTOS_DEFESA]

5Ô∏è‚É£ *Informa√ß√µes Adicionais*
- [INFORMA√á√ïES_ADICIONAIS]

---

## üéØ *OBJETIVO FINAL*

Entregar uma *Contrarraz√£o Administrativa formal, coerente, fundamentada, com cita√ß√µes legais, doutrin√°rias e jurisprudenciais, defendendo os interesses da empresa **manifestante*, com estrutura de pe√ßa pronta para protocolo administrativo.

Se informa√ß√µes faltarem, solicite gentilmente mais detalhes antes de redigir.


1. Identifica√ß√£o Completa
Do Recorrente:
Nome/Raz√£o Social completa: ${data.nomeRazaoSocial}
CNPJ: ${data.cnpj}
Endere√ßo completo: ${data.endereco}

2. Informa√ß√µes do √ìrg√£o e da licita√ß√£o:
N√∫mero da Licita√ß√£o: ${data.numeroLicitacao}
Objeto da Licita√ß√£o: ${data.objetoLicitacao}
Data da Sess√£o P√∫blica: ${data.dataSessaoPublica}
Link para o Edital: ${data.linkEdital}
Nome do √ìrg√£o/Entidade: ${data.nomeOrgao}

3. Recurso relacionado.
Nome da empresa recorrente: ${data.nomeDaEmpresaRecorrente}
Resmo da tese do recurso: ${data.resumoDaTeseDoRecurso}

4. Fundamenta√ß√£o da Contrarraz√£o
Argumento da defesa: ${data.argumentoDeDefesa}

5. Informa√ß√µes Adicionais:
Informa√ß√µes adicionais relevantes: ${data.informacoesAdicionais}
  `.trim();
}

const INITIAL_STATE: FormData = {
  nomeRazaoSocial: "",
  cnpj: "",
  endereco: "",

  nomeOrgao: "",
  numeroLicitacao: "",
  objetoLicitacao: "",
  dataSessaoPublica: "",
  linkEdital: "",

  nomeDaEmpresaRecorrente: "",
  resumoDaTeseDoRecurso: "",

  argumentoDeDefesa:"",
  informacoesAdicionais: "",
};

export default function FormularioRecurso() {
  const [formData, setFormData] = useState<FormData>(INITIAL_STATE);
  const navigate = useNavigate();

  function handleChange(
    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) {
    const { name, value } = event.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  }

  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {
    event.preventDefault();
    try {
      const formattedText = formatFormDataToString(formData);
      console.log("Texto formatado:", formattedText);

      navigate("/resultado", {
        state: { texto: formattedText },
      });
    } catch (error) {
      console.error("Erro ao navegar:", error);
    }
  }

  return (
    <Box sx={{ backgroundColor: "#f5f5f5", minHeight: "100vh", pt: 25 }}>
      <Box
        component="form"
        onSubmit={handleSubmit}
        sx={{
          maxWidth: 800,
          mx: "auto",
          px: 2,
          display: "flex",
          flexDirection: "column",
          gap: 4,
        }}
        noValidate
        autoComplete="off"
      >
        {/* CARD 1 - Identifica√ß√£o Completa */}
        <Card elevation={3} sx={{ borderRadius: 4, mb: 3 }}>
          <CardContent sx={{ px: 7, pt: 7, pb: 10 }}>
            <Typography variant="h5" gutterBottom>
              1. Identifica√ß√£o Completa
            </Typography>

            <Typography variant="subtitle1" gutterBottom>
              Do Recorrente
            </Typography>
            <TextField
              label="Nome/Raz√£o Social completa"
              name="nomeRazaoSocial"
              value={formData.nomeRazaoSocial}
              onChange={handleChange}
              fullWidth
              required
              sx={{ mb: 2 }}
            />
            <TextField
              label="CNPJ"
              name="cnpj"
              value={formData.cnpj}
              onChange={handleChange}
              fullWidth
              required
              sx={{ mb: 2 }}
            />
            <TextField
              label="Endere√ßo completo"
              name="endereco"
              value={formData.endereco}
              onChange={handleChange}
              fullWidth
              required
              sx={{ mb: 2 }}
            />
          </CardContent>
        </Card>

        {/* CARD 2 - Informa√ß√µes da Licita√ß√£o */}
        <Card elevation={3} sx={{ borderRadius: 4, mb: 3 }}>
          <CardContent sx={{ px: 7, pt: 7, pb: 10 }}>
            <Typography variant="h5" gutterBottom>
              2. Informa√ß√µes do √ìrg√£o e da licita√ß√£o
            </Typography>
            <TextField
              label="N√∫mero da Licita√ß√£o (Preg√£o, Concorr√™ncia, etc.)"
              name="numeroLicitacao"
              value={formData.numeroLicitacao}
              onChange={handleChange}
              fullWidth
              required
              sx={{ mb: 2 }}
            />
            <TextField
              label="Objeto da Licita√ß√£o"
              name="objetoLicitacao"
              value={formData.objetoLicitacao}
              onChange={handleChange}
              fullWidth
              multiline
              minRows={3}
              required
              sx={{ mb: 2 }}
            />
            <TextField
              label="Data da Sess√£o P√∫blica"
              name="dataSessaoPublica"
              type="date"
              value={formData.dataSessaoPublica}
              onChange={handleChange}
              fullWidth
              InputLabelProps={{ shrink: true }}
              sx={{ mb: 2 }}
            />
            <TextField
              label="Link para o Edital"
              name="linkEdital"
              value={formData.linkEdital}
              onChange={handleChange}
              fullWidth
              sx={{ mb: 2 }}
            />
            <TextField
              label="Nome do √ìrg√£o/Entidade"
              name="nomeOrgao"
              value={formData.nomeOrgao}
              onChange={handleChange}
              fullWidth
              required
              sx={{ mb: 2 }}
            />
          </CardContent>
        </Card>

        {/* CARD 3 - Ato Recorrido */}
        <Card elevation={3} sx={{ borderRadius: 4, mb: 3 }}>
          <CardContent sx={{ px: 7, pt: 7, pb: 10 }}>
            <Typography variant="h5" gutterBottom>
              3. Identifica√ß√£o do recurso contestado
            </Typography>
            <TextField
              label="Nome da empresa recorrente"
              name="nomeDaEmpresaRecorrente"
              value={formData.nomeDaEmpresaRecorrente}
              onChange={handleChange}
              fullWidth
              minRows={3}
              required
              sx={{ mb: 2 }}
            />
            <TextField
              label="Resumo da tese do recurso"
              name="resumoDaTeseDoRecurso"
              value={formData.resumoDaTeseDoRecurso}
              onChange={handleChange}
              fullWidth
              multiline
              minRows={3}
              sx={{ mb: 2 }}
            />
          </CardContent>
        </Card>

        {/* CARD 4 - Informa√ß√µes Adicionais */}
        <Card elevation={3} sx={{ borderRadius: 4, mb: 3 }}>
          <CardContent sx={{ px: 7, pt: 7, pb: 10 }}>
            <Typography variant="h5" gutterBottom>
              4. Fundamenta√ß√£o da Contrarraz√£o
            </Typography>
            <TextField
              label="Argumento da defesa"
              name="argumentoDeDefesa"
              value={formData.argumentoDeDefesa}
              onChange={handleChange}
              fullWidth
              multiline
              minRows={3}
              sx={{ mb: 4 }}
            />
          </CardContent>
        </Card>

        {/* CARD 5 - Informa√ß√µes Adicionais */}
        <Card elevation={3} sx={{ borderRadius: 4, mb: 3 }}>
          <CardContent sx={{ px: 7, pt: 7, pb: 10 }}>
            <Typography variant="h5" gutterBottom>
              5. Informa√ß√µes Adicionais
            </Typography>
            <TextField
              label="Informa√ß√µes adicionais relevantes"
              name="informacoesAdicionais"
              value={formData.informacoesAdicionais}
              onChange={handleChange}
              fullWidth
              multiline
              minRows={3}
              sx={{ mb: 4 }}
            />
          </CardContent>
        </Card>

        {/* Bot√£o Final */}
        <Button
          variant="contained"
          type="submit"
          sx={{
            background: "#05467f",
            width: "300px",
            mt: 6,
            mb: 8,
            py: 1.5,
            fontWeight: "bold",
            fontSize: "1rem",
            borderRadius: "8px",
            boxShadow: 2,
            mx: "auto",
          }}
        >
          Construir Contrarraz√£o
        </Button>
      </Box>
    </Box>
  );
}
